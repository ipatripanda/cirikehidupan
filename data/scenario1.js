(function(){var loadHandler=window['s_{0F328BF9-AF98-4F31-BF94-2BE58DB88411}'];var scenarioJson = "";var skinSettingsJson = {"characterSpeech":{"fontFamily":"Open Sans","type":"standard"},"colors":{"audio.playback":{"value":"#75B763"},"button.background.normal":{"value":"#75B763"},"button.background.over":{"value":"#8CCC7B"},"button.text.normal":{"value":"#FFFFFF"},"button.text.over":{"value":"#FFFFFF"},"characterSpeech.background":{"alpha":"0.89804","value":"#FFFFFF"},"characterSpeech.text":{"value":"#000000"},"hyperlinks":{"value":"#097CE7"},"message.background":{"alpha":"0.89804","value":"#FFFFFF"},"message.text":{"value":"#000000"},"pageBackground":{"value":"#384041"},"reply.background.normal":{"alpha":"0.89804","value":"#FFFFFF"},"reply.background.over":{"alpha":"0.89804","value":"#DFF3DA"},"reply.text":{"value":"#2E333F"},"title.background":{"alpha":"0.20392","value":"#2D393E"},"title.text":{"value":"#E8E8E8"}},"message":{"fontFamily":"Open Sans","type":"standard"},"moodMeter":{"type":"standard","visible":false},"reply":{"bullet":{"type":"numbers"},"fontFamily":"Open Sans","type":"standard"},"showTitle":false};var i18nJson = {"AUTHORIZATION_FORM_ERROR_EMAIL":"","AUTHORIZATION_FORM_ERROR_FIELD_REQUIRED":"Harus Diisi","AUTHORIZATION_FORM_SEND_TO_STUDENT_EMAIL_HINT":"Hasil akan dikirim.","AUTHORIZATION_FORM_TITLE":"Isi Identitasmu","Player.Accessible.AnswerOptions":"","Player.Accessible.AriaLabelAudioPlayer":"","Player.Accessible.AriaLabelCharacterSpeech":"","Player.Accessible.AriaLabelFinalScene":"","Player.Accessible.AriaLabelFinalSceneButtons":"","Player.Accessible.AriaLabelMessageButton":"","Player.Accessible.AriaLabelScene":"","Player.Accessible.AriaLabelSceneMessage":"","Player.Accessible.AriaLabelSettings":"","Player.Accessible.AriaLabelStartTalk":"","Player.Accessible.AriaLabelTopPanel":"","Player.Accessible.AriaLabelTrialBanner":"","Player.Accessible.CharacterEmotion":"","Player.Accessible.GotoAccessibleMode":"","Player.Accessible.GotoNormalMode":"","Player.Accessible.HiddenLink":"","Player.Accessible.MoodAngry":"","Player.Accessible.MoodHappy":"","Player.Accessible.MoodNormal":"","Player.Accessible.MoodPuzzled":"","Player.Accessible.MoodUnhappy":"","Player.Accessible.UserScore":"","Player.Accessible.UserScoreAndMax":"","Player.Application.Back":"","Player.Button.Back":"Kembali","Player.Button.Continue":"Lanjutkan","Player.Button.Finish":"Selesai","Player.Button.No":"Tidak","Player.Button.OK":"OK","Player.Button.Restart":"Ulangi","Player.Button.Skip":"Lewati","Player.Button.Yes":"Ya","Player.Message.Btn.Text":"Lanjutkan","Player.Message.Start.Btn.Text":"Mulai","Player.Msg.ResumePrompt":"Apakah kamu ingin melanjutkan pelajaranmu sebelumnya?","Player.Msg.ResumePromptTitle":"Lanjutkan...","Player.Msg.SendReportToEmailFailed":"Gagal mengirim. Ulangi?","Player.Msg.SendReportToUrlFailed":"","Player.Msg.SendingReport":"Mengirim Hasil...","Player.Msg.UserScoreTemplate(%USER_SCORE%)":"Kamu mendapat %USER_SCORE% poin","Player.Msg.UserScoreWithMaxScoreTemplate(%USER_SCORE%)":"Your score is %USER_SCORE% out of 100 points"};var reportTemplate = "<scenarioReportTemplate version=\"4\" xmlns=\"http:\/\/www.ispringsolutions.com\/talkmaster\/scenario\/1\"><templates><template id=\"useTakersEmailSettings\"><![CDATA[false]]><\/template><\/templates><messages><message id=\"from\"><![CDATA[iSpring Solutions]]><\/message><message id=\"subject\"><![CDATA[[%SIM_STATUS%] Simulation Results: &quot;%SIM_TITLE%&quot;]]><\/message><message id=\"user\"><![CDATA[User:]]><\/message><message id=\"userId\"><![CDATA[User:]]><\/message><message id=\"disclaimer\"><![CDATA[This is an automatically generated email to report dialog results. You are receiving this because the dialog author has specified your email address for sending dialog results.]]><\/message><message id=\"gradedScenario\"><![CDATA[Graded Simulation]]><\/message><message id=\"surveyScenario\"><![CDATA[Simulation]]><\/message><message id=\"userScore\"><![CDATA[User Score:]]><\/message><message id=\"maxScore\"><![CDATA[Maximum Score:]]><\/message><message id=\"passingScore\"><![CDATA[Passing Score:]]><\/message><message id=\"duration\"><![CDATA[Simulation Duration:]]><\/message><message id=\"scenarioResult\"><![CDATA[Result:]]><\/message><message id=\"passed\"><![CDATA[Simulation Passed]]><\/message><message id=\"failed\"><![CDATA[Simulation Failed]]><\/message><message id=\"finished\"><![CDATA[Simulation Finished]]><\/message><message id=\"score\"><![CDATA[Score:]]><\/message><message id=\"spentTimeFormat\"><![CDATA[%SPENT_TIME%]]><\/message><\/messages><\/scenarioReportTemplate>";var maxScore = '60';var reportUrl = "https://s4.ispringsolutions.com";loadHandler&&loadHandler(4, 's_2EE03B88-7FD0-44CD-A0AB-E07CAFB1B7CB', scenarioJson, skinSettingsJson, i18nJson, reportTemplate, maxScore, reportUrl);})();